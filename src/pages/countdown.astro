---
import Layout from "../layouts/Layout.astro";
---

<style>
  @tailwind components;

  @layer components {
    /* date-display */
    .duration {
      @apply mb-2 inline-block rounded bg-black bg-opacity-25 p-2.5 text-xl  text-white;
    }
  }
</style>
<Layout
  title="There's someone behind you but don't look!"
  bodyClass="text-center animate-rainbow"
>
  <link
    slot="head"
    rel="shortcut icon"
    href="/assets/heart-128x128.png"
    type="image/x-icon"
  />
  <title slot="head">There's someone behind you but don't look!</title>

  <h1 class="text-5xl mt-10 mb-5">Countdown</h1>

  <div>
    <div class="duration">
      <span id="days" class="duration">00</span>
      <div>Days</div>
    </div>
    <div class="duration">
      <span id="hours" class="duration">--</span>
      <div>Hours</div>
    </div>
    <div class="duration">
      <span id="minutes" class="duration">--</span>
      <div>Minutes</div>
    </div>
    <div class="duration">
      <span id="seconds" class="duration">--</span>
      <div>Seconds</div>
    </div>
  </div>

  <div id="progress-bar" class="flex flex-col pt-3 mb-4 items-center">
    <div class="label text-3xl" data-count="100">100%</div>
    <div class="rounded line relative h-4 w-[500px] bg-black bg-opacity-25">
      <span class="rounded absolute top-0 left-0 h-full bg-white"></span>
    </div>
  </div>

  <div class="text-lg">
    <p id="next-percent-time">Next percent at ...</p>
    <p id="num-repeats">Only ... more waiting!</p>
    <p id="next-n-percent-time">Next percent at ...</p>
  </div>
</Layout>

<script is:inline src="/assets/confetti.js">

</script>
<script>
  function getTimeRemaining(endTime: Date) {
    var t = Math.max(endTime.valueOf() - new Date().valueOf(), 0);
    var seconds = Math.floor((t / 1000) % 60);
    var minutes = Math.floor((t / 1000 / 60) % 60);
    var hours = Math.floor((t / (1000 * 60 * 60)) % 24);
    var days = Math.floor(t / (1000 * 60 * 60 * 24));
    return {
      total: t,
      days: days,
      hours: hours,
      minutes: minutes,
      seconds: seconds,
    };
  }

  function initializeClock(startTime: Date, endTime: Date) {
    var timeDelta = endTime.valueOf() - startTime.valueOf();

    var daysSpan = document.getElementById("days");
    var hoursSpan = document.getElementById("hours");
    var minutesSpan = document.getElementById("minutes");
    var secondsSpan = document.getElementById("seconds");

    var progressBar = document.getElementById("progress-bar");
    var progressBarLabel = progressBar.children[0];
    var progressBarLine = progressBar.children[1];

    var nextPercentText = document.getElementById("next-percent-time");
    var numRepeatsText = document.getElementById("num-repeats");
    var nextNPercentText = document.getElementById("next-n-percent-time");

    var confetti = false;

    function updateClock() {
      var t = getTimeRemaining(endTime);

      if (t.days >= 100) {
        daysSpan.innerHTML = t.days.toString();
      } else {
        daysSpan.innerHTML = ("0" + t.days).slice(-2);
      }

      hoursSpan.innerHTML = ("0" + t.hours).slice(-2);
      minutesSpan.innerHTML = ("0" + t.minutes).slice(-2);
      secondsSpan.innerHTML = ("0" + t.seconds).slice(-2);

      if (t.total <= 0) {
        clearInterval(timeinterval);
      }

      var currentTime = new Date();
      var percentFinished = Math.min(
        100,
        (100 * (currentTime.valueOf() - startTime.valueOf())) / timeDelta
      );

      // Make confetti fall if percentage is whole number
      if (
        Math.abs(((Math.floor(percentFinished * 100) / 100) % 1) - 0) < 0.00001
      ) {
        if (!confetti) {
          startConfetti();
          setTimeout(stopConfetti, 5000);
        }
        confetti = true;
      } else {
        confetti = false;
      }

      const percentFinishedTrunc = Math.floor(percentFinished * 100) / 100;

      const percentFinishedStr = percentFinishedTrunc + "%";
      progressBarLabel.innerHTML = percentFinishedStr;
      (progressBarLine.children[0] as HTMLElement).style.width =
        percentFinishedStr;

      var numRepeats =
        Math.floor(((100 - percentFinished) / percentFinished) * 100) / 100;
      numRepeatsText.innerHTML = "Only " + numRepeats + "x more waiting!";

      var nextPercent = Math.floor(percentFinished + 1) / 100;
      var nextPercentTime = new Date(
        startTime.getTime() + nextPercent * timeDelta
      );
      nextPercentText.innerHTML =
        "Next percent at " + nextPercentTime.toString();

      nextNPercentText.innerHTML = "";
      var nextPercents = [10, 20, 25, 30, 40, 50, 60, 69, 70, 75, 80, 90, 100];
      for (var i = 0; i < nextPercents.length; i++) {
        if (percentFinished > nextPercents[i]) {
          continue;
        }
        var percent = nextPercents[i] / 100;
        var percentTime = new Date(startTime.getTime() + percent * timeDelta);
        nextNPercentText.innerHTML +=
          nextPercents[i].toString() +
          "% at " +
          percentTime.toString() +
          "<br />";
      }
    }

    updateClock();
    var timeinterval = setInterval(updateClock, 1000);
  }

  initializeClock(
    new Date("3 May 2022 8:00:00 EDT"),
    new Date("6 Aug 2022 13:25:00 PDT")
  );
</script>
